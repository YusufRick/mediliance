"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SingleItemOpenAccordion = exports.ReactAccordion = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
function ReactAccordion(props) {
    const { className, items, onClick } = props;
    return ((0, jsx_runtime_1.jsx)("ul", { className: className, children: items.map((item, index) => ((0, jsx_runtime_1.jsx)("li", { children: item.child
                ? ((0, jsx_runtime_1.jsxs)("details", { "aria-label": item.name, open: item.open, children: [(0, jsx_runtime_1.jsx)("summary", { onClick: (event) => typeof onClick === 'function' && onClick(event, index), children: item.heading }), item.child] })) : ((0, jsx_runtime_1.jsx)("summary", { children: item.heading })) }, item.name))) }));
}
exports.ReactAccordion = ReactAccordion;
function SingleItemOpenAccordion(props) {
    const { items } = props;
    let initialOpenItem = null;
    const reversedOpenItemIndex = items.slice().reverse().findIndex((item) => item.open);
    if (reversedOpenItemIndex !== -1) {
        initialOpenItem = items.length - reversedOpenItemIndex - 1;
    }
    const [openItemIndex, setOpenItemIndex] = (0, react_1.useState)(initialOpenItem);
    const handleClick = (event, index) => {
        event.preventDefault();
        setOpenItemIndex(openItemIndex === index ? null : index);
    };
    const revisedItems = items.map((item, index) => ({
        ...item,
        open: index === openItemIndex,
    }));
    return ((0, jsx_runtime_1.jsx)(ReactAccordion, { items: revisedItems, onClick: handleClick }));
}
exports.SingleItemOpenAccordion = SingleItemOpenAccordion;
exports.default = ReactAccordion;
module.exports = ReactAccordion;
module.exports.SingleItemOpenAccordion = SingleItemOpenAccordion;
//# sourceMappingURL=index.js.map